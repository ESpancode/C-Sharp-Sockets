using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using System.Net;
using System.Net.Sockets;
using System.Threading;
using System.Text;
using System.IO;

static class Webserver
{
	private static WebServer server = new WebServer();
	public static void Main()
	{
		server.serve();
	}

	public class WebServer
	{
		private System.Net.Sockets.TcpListener tcpListener;
		private System.Net.Sockets.Socket clientSocket;
		// Set WWW Root Path
		string rootPath = "C:\\WebRoot\\";
		// Set default page
		string defaultPage = "index.html";
		public void serve()
		{
			string hostName = Dns.GetHostName();
			IPAddress serverIP = Dns.GetHostEntry(hostName).AddressList(4);
			string Port = "8080";
			tcpListener = new TcpListener(serverIP, Int32.Parse(Port));
			tcpListener.Start();
			Console.WriteLine("Web server started at: " + hostName + " " + serverIP.ToString() + ":" + Port);
			while ((true)) {
				clientSocket = tcpListener.AcceptSocket();
				// Socket Information
				IPEndPoint clientInfo = (IPEndPoint)clientSocket.RemoteEndPoint;
				Console.WriteLine("Client: " + clientInfo.Address.ToString() + ":" + clientInfo.Port.ToString());
				ProcessRequest();
			}
		}

		protected void ProcessRequest()
		{
			byte[] recvBytes = new byte[1025];
			string htmlReq = null;
			Int32 bytes = default(Int32);

			// Receive HTTP Request from Web Browser
			//Some browsers send empty requests sometimes, in addition to the real requests.
			int tries = 10;
			while (tries > 0) {
				bytes = clientSocket.Receive(recvBytes, 0, clientSocket.Available, SocketFlags.None);
				if (bytes > 0) {
					tries = 0;
				} else {
					tries = tries - 1;
					Console.WriteLine("Failed again, retry");
					//Pause for a moment (50 milliseconds) to wait for the next request
					Thread.Sleep(50);
				}
			}

			htmlReq = Encoding.ASCII.GetString(recvBytes, 0, bytes);
			Console.WriteLine("HTTP Request: ");
			Console.WriteLine(htmlReq);

			string[] strArray = null;
			string strRequest = null;

			strArray = htmlReq.Trim.Split(" ");

			// Determine the HTTP method (GET only)
			if (strArray(0).Trim().ToUpper.Equals("GET")) {
				strRequest = strArray(1).Trim;

				if ((strRequest.StartsWith("/"))) {
					strRequest = strRequest.Substring(1);
				}

				if ((strRequest.EndsWith("/") | strRequest.Equals(""))) {
					strRequest = strRequest + defaultPage;
				}

				strRequest = rootPath + strRequest;
				sendHTMLResponse(strRequest);

			// Not HTTP GET method
			} else if (!string.IsNullOrEmpty(strArray(0).Trim())) {
				strRequest = rootPath + "Error\\400.html";
				sendHTMLResponse(strRequest);
			}

			clientSocket.Close();
		}

		// Send HTTP Response
		private void sendHTMLResponse(string httpRequest)
		{
			// Get the file content of HTTP Request
			FileStream streamReader = default(FileStream);
			string response = null;
			if (!File.Exists(httpRequest)) {
				httpRequest = rootPath + "Error\\400.html";
				//should really be 404.html
				response = "404 Not Found";
			} else {
				response = "200 OK";
			}
			streamReader = new FileStream(httpRequest, IO.FileMode.Open, IO.FileAccess.Read);
			int len = streamReader.Length;
			byte[] strBuff = new byte[len + 1];
			streamReader.Read(strBuff, 0, len);
			streamReader.Close();
			streamReader = null;

			// Set HTML Header
			string htmlHeader = "HTTP/1.0 " + response + ControlChars.CrLf + "Server: WebServer 1.0" + ControlChars.CrLf + "Content-Length: " + len + ControlChars.CrLf + "Content-Type: " + getContentType(httpRequest) + ControlChars.CrLf + ControlChars.CrLf;

			// The content Length of HTML Header
			byte[] headerByte = Encoding.ASCII.GetBytes(htmlHeader);
			Console.WriteLine("HTML Header: " + ControlChars.CrLf + htmlHeader);
			// Send HTML Header back to Web Browser
			clientSocket.Send(headerByte, 0, headerByte.Length, SocketFlags.None);

			// Send HTML Content back to Web Browser
			clientSocket.Send(strBuff, 0, len, SocketFlags.None);

		}

		// Get Content Type
		private string getContentType(string httpRequest)
		{
			if ((httpRequest.EndsWith("html"))) {
				return "text/html";
			} else if ((httpRequest.EndsWith("htm"))) {
				return "text/html";
			} else if ((httpRequest.EndsWith("txt"))) {
				return "text/plain";
			} else if ((httpRequest.EndsWith("gif"))) {
				return "image/gif";
			} else if ((httpRequest.EndsWith("jpg"))) {
				return "image/jpeg";
			} else if ((httpRequest.EndsWith("jpeg"))) {
				return "image/jpeg";
			} else if ((httpRequest.EndsWith("pdf"))) {
				return "application/pdf";
			} else if ((httpRequest.EndsWith("pdf"))) {
				return "application/pdf";
			} else if ((httpRequest.EndsWith("doc"))) {
				return "application/msword";
			} else if ((httpRequest.EndsWith("xls"))) {
				return "application/vnd.ms-excel";
			} else if ((httpRequest.EndsWith("ppt"))) {
				return "application/vnd.ms-powerpoint";
			} else {
				return "text/plain";
			}
		}
	}
}
